[{"I:\\Code\\React Webapps\\dilip\\src\\index.js":"1","I:\\Code\\React Webapps\\dilip\\src\\reportWebVitals.js":"2","I:\\Code\\React Webapps\\dilip\\src\\App.js":"3","I:\\Code\\React Webapps\\dilip\\src\\components\\Login.js":"4","I:\\Code\\React Webapps\\dilip\\src\\components\\ThankYou.js":"5"},{"size":981,"mtime":1611748286506,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1414,"mtime":1611749741487,"results":"9","hashOfConfig":"7"},{"size":1228,"mtime":1611657595747,"results":"10","hashOfConfig":"7"},{"size":680,"mtime":1611749313093,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"k8vnuo",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"I:\\Code\\React Webapps\\dilip\\src\\index.js",[],"I:\\Code\\React Webapps\\dilip\\src\\reportWebVitals.js",[],["24","25"],"I:\\Code\\React Webapps\\dilip\\src\\App.js",["26"],"I:\\Code\\React Webapps\\dilip\\src\\components\\Login.js",["27"],"import React from 'react'\r\nimport './Login.css';\r\n\r\nfunction Login({ name, number, email, changeName, changeNumber, changeEmail, register }) {\r\n    return (\r\n        <div className=\"login-box\">\r\n            <h2>Register</h2>\r\n            <form>\r\n                <div className=\"user-box\">\r\n                    <input type=\"text\" value={name.trim()} onChange={(e) => changeName(e.target.value)} />\r\n                    <label>First Name</label>\r\n                </div>\r\n                <div className=\"user-box\">\r\n                    <input type=\"number\" value={number} onChange={(e) => changeNumber(e.target.value)} placeholder=\"10 digit number\" />\r\n                    <label>Number</label>\r\n                </div>\r\n                <div className=\"user-box\">\r\n                    <input type=\"text\" value={email} onChange={(e) => changeEmail(e.target.value)} />\r\n                    <label>Email</label>\r\n                </div>\r\n                <a href=\"#\" onClick={(e)=>register(e)}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n        Submit\r\n      </a>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","I:\\Code\\React Webapps\\dilip\\src\\components\\ThankYou.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":44,"column":11,"nodeType":"34","messageId":"35","endLine":44,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":21,"column":17,"nodeType":"38","endLine":21,"endColumn":56},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'userRef' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]